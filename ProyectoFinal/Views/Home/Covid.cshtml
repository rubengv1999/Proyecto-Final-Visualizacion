@{
    ViewData["Title"] = "Avance del COVID-19 a nivel mundial";
}


<h1 class="display-4 text-center">@ViewData["Title"]</h1>
<div id="container"></div>
<p>
    <label for="amount">Fecha seleccionada:</label>
    <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
</p>


<div class="mx-3 mt-3" id="slider"></div>

<div class="modal fade" id="modalGraficos" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" style="max-width: 1500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div style="width:100%;">
                    <div class="row">
                        <div class="col-12 col-sm-8">
                            <canvas id="canvasLineas"></canvas>
                        </div>
                        <div class="col-12 col-sm-4 h-100">
                            <canvas id="canvasBarras" height="300"></canvas>
                        </div>
                    </div>
                   
                </div>
            </div>
          
        </div>
    </div>
</div>

@section Scripts{

<script>

    $(function () {
       
    });

    $.get("/Home/GetDates", function (dates) {
        getDataByDate(dates[dates.length - 1]),
        console.log(dates);
        
        $("#slider").slider({
            range: "max",
            min: new Date(dates[0]).getTime() / 1000,
            max: new Date(dates[dates.length - 1]).getTime() / 1000,
            value: new Date(dates[0]).getTime() / 1000,
            slide: function (event, ui) {
                $("#amount").val((new Date(ui.value * 1000).toDateString()));
                var date = new Date(ui.value * 1000)
                var year = date.getFullYear();
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                var day = ("0" + date.getDate()).slice(-2);
                getDataByDate(`${year}-${month}-${day}`);
            }
        });
    });

    function getDataByDate(date) {
        $.get("/Home/GetDataByDate?Date=" + date, function (countries) {
            console.log(countries);
            loadMap(countries);
        });
    }

    function loadMap(countries) {
        var data = [];

        countries.forEach(pais => data.push({ name: pais.location, code3: pais.isoCode, value: pais.totalCases }));

        var mapData = Highcharts.geojson(Highcharts.maps['custom/world']);

        mapData.forEach(function (country) {
            country.id = country.properties['hc-key'];
            if (country.name == "United States of America") country.name = "United States";
        });

        Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {
            proceed.apply(this, Array.prototype.slice.call(arguments, 1));
            var points = mapChart.getSelectedPoints();
            if (points.length) {
                points.forEach(function (p) {
                    getDataByCountry(p.name);
                });
            }
        });

        mapChart = Highcharts.mapChart('container', {
            chart: {
                height: 35 + "%"
            },
            title: {
                text: null
            },
            colorAxis: {
                min: 1,
                type: 'logarithmic',
                minColor: '#EEEEFF',
                maxColor: '#000022',
                stops: [
                    [0, '#EFEFFF'],
                    [0.67, '#4444FF'],
                    [1, '#000022']
                ]
            },
            series: [{
                data: data,
                mapData: mapData,
                joinBy: ['iso-a3', 'code3'],
                name: 'Total Cases',
                allowPointSelect: true,
                cursor: 'pointer',
                states: {
                    select: {
                        color: '#000000',
                        borderColor: 'black',
                        dashStyle: 'shortdot'
                    }
                },
                borderWidth: 0.5
            }]
        });

       // mapChart.get('cr').select();
    }

    function getDataByCountry(country) {
        $('#modalGraficos').modal('show');
        $.get("/Home/GetDataByCountry?Country=" + country, function (data) {
            var ctx = document.getElementById('canvasLineas').getContext('2d');
            window.myLine = new Chart(ctx, config);

            var ctx = document.getElementById('canvasBarras').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
                    datasets: [{
                        label: '# of Votes',
                        data: [12, 19, 3, 5, 2, 3],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });
    }


   

    window.randomScalingFactor = function () {
        return Math.round(-100, 100);
    };

    window.chartColors = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
    };
  
    var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
    var config = {
        type: 'line',
        data: {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [{
                label: 'My First dataset',
                backgroundColor: window.chartColors.red,
                borderColor: window.chartColors.red,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ],
                fill: false,
            }, {
                label: 'My Second dataset',
                fill: false,
                backgroundColor: window.chartColors.blue,
                borderColor: window.chartColors.blue,
                data: [
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor(),
                    randomScalingFactor()
                ],
            }]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Chart.js Line Chart'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                xAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Month'
                    }
                }],
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Value'
                    }
                }]
            }
        }
    };
   
</script>


}