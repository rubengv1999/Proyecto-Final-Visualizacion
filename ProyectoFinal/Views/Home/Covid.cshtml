@{
    ViewData["Title"] = "Avance del COVID-19 a nivel mundial";
}


<h1 class="display-4 text-center">@ViewData["Title"]</h1>
<div id="container"></div>
<p>
    <label for="amount">Fecha seleccionada:</label>
    <input type="text" id="amount" readonly style="border:0; color:#f6931f; font-weight:bold;">
</p>


<div class="mx-3 mt-3" id="slider"></div>

<div class="modal fade" id="modalGraficos" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered" style="max-width: 1500px;">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div style="width:100%;">
                    <div class="row">
                        <div class="col-12 col-sm-8" id="div-canvas-lineas">
                            <canvas id="canvasLineas"></canvas>
                        </div>
                        <div class="col-12 col-sm-4 h-100" id="div-canvas-barras">
                            <canvas id="canvasBarras" height="300"></canvas>
                        </div>
                    </div>
                   
                </div>
            </div>
          
        </div>
    </div>
</div>

@section Scripts{

<script>

    $(function () {
       
    });

    $.get("/Home/GetDates", function (dates) {
        last = dates.length - 1;
        getDataByDate(dates[last]),
        $(function () {
            var init = new Date(dates[dates.length - 1]).getTime() / 1000;

            $("#amount").val((new Date(init * 1000).toDateString()));
        });
        
        $("#slider").slider({
            range: "max",
            min: new Date(dates[0]).getTime() / 1000,
            max: new Date(dates[dates.length - 1]).getTime() / 1000,
            value: new Date(dates[last]).getTime() / 1000,
            
            slide: function (event, ui) {
                $("#amount").val((new Date(ui.value * 1000).toDateString()));
                var date = new Date(ui.value * 1000)
                var year = date.getFullYear();
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                var day = ("0" + date.getDate()).slice(-2);
                getDataByDate(`${year}-${month}-${day}`);
            }
        });

    });

    function getDataByDate(date) {
        $.get("/Home/GetDataByDate?Date=" + date, function (countries) {
            loadMap(countries);
        });
    }

    function loadMap(countries) {
        var data = [];

        countries.forEach(pais => data.push({ name: pais.location, code3: pais.isoCode, value: pais.totalCases }));

        var mapData = Highcharts.geojson(Highcharts.maps['custom/world']);

        mapData.forEach(function (country) {
            country.id = country.properties['hc-key'];
            if (country.name == "United States of America") country.name = "United States";
        });

        Highcharts.wrap(Highcharts.Point.prototype, 'select', function (proceed) {
            proceed.apply(this, Array.prototype.slice.call(arguments, 1));
            var points = mapChart.getSelectedPoints();
            if (points.length) {
                points.forEach(function (p) {
                    getDataByCountry(p.name);
                });
            }
        });

        mapChart = Highcharts.mapChart('container', {
            chart: {
                height: 35 + "%"
            },
            title: {
                text: null
            },
            colorAxis: {
                min: 1,
                type: 'linear',
                minColor: '#92d14f',
                maxColor: '#7b0100',
                stops: [
                    [0, '#92d14f'],
                    [0.25, '#fec923'],
                    [0.5, '#fa9924  '],
                    [0.75, '#ea0001'],
                    [1, '#7b0100']
                ]
            },
            series: [{
                data: data,
                mapData: mapData,
                joinBy: ['iso-a3', 'code3'],
                name: 'Total Cases',
                allowPointSelect: true,
                cursor: 'pointer',
                states: {
                    select: {
                        color: '#000000',
                        borderColor: 'black',
                        dashStyle: 'shortdot'
                    }
                },
                borderWidth: 0.5
            }]
        });

    }

    function getDataByCountry(country) {
        $('#modalGraficos').modal('show');
        $.get("/Home/GetDataByCountry?Country=" + country, function (data) {
            $("#exampleModalLabel").text(country);
            var dataTotalCases = []; var dataNewDeaths = []; var dataNewCases = []; var dataDates = []; var dataTotalDeaths=[]
            data.forEach(pais => dataTotalCases.push(pais.totalCases));
            data.forEach(pais => dataNewDeaths.push(pais.newDeaths));
            data.forEach(pais => dataNewCases.push(pais.newCases));
            data.forEach(pais => dataTotalDeaths.push(pais.totalDeaths));
            data.forEach(pais => dataDates.push((pais.date.split("-"))[1]));
            var ctx = document.getElementById('canvasLineas').getContext('2d');
            window.myLine = new Chart(ctx, config);
            
            var mesAnterior = 01;
            var cont = 0;
            var newCases = 0;
            var totalCases = 0;
            var totalDeaths = 0;
            var newDeaths = 0;
            for (var mes in dataDates) {
                if (mesAnterior == dataDates[mes]) {
                    newCases = dataNewCases[mes];
                    totalCases = dataTotalCases[mes];
                    newDeaths = dataNewDeaths[mes];
                    totalDeaths = dataTotalDeaths[mes];
                } else {
                    dataNewCases1[cont] = newCases;
                    dataTotalCases1[cont] = totalCases;
                    dataTotalDeaths1[cont] = totalDeaths;
                    dataNewDeaths1[cont] = newDeaths;
                    newCases = 0; totalCases = 0; totalDeaths = 0; newDeaths = 0;
                    mesAnterior = dataDates[mes];
                    cont++;
                }
            }
            var ctx = document.getElementById('canvasBarras').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ['Diciembre', 'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],
                    datasets: [{
                        label: 'Total de casos',
                        data: dataTotalCases1,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(200, 100, 50, 0.2)',
                            'rgba(100, 124, 40, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(200, 100, 50, 1)',
                            'rgba(100, 124, 40, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            fontColor: "black",
                            boxWidth: 10,
                            padding: 20
                        }
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: false
                            }
                        }]
                    },
                    title: {
                        display: true,
                        text: 'Total de casos por mes'
                    },
                }
            });
        });
    }

   

    window.chartColors = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
    };
    var dataTotalCases1 = [];
    var dataNewDeaths1 = [];
    var dataNewCases1 = [];
    var dataTotalDeaths1 = [];
    var config = {
        type: 'line',
        data: {
            labels: ['Diciembre','Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio'],
            datasets: [{
                label: 'Nuevos casos',
                backgroundColor: window.chartColors.red,
                borderColor: window.chartColors.red,
                data: dataNewCases1,
                fill: false,
            },
            {
                label: 'Nuevas muertes',
                fill: false,
                backgroundColor: window.chartColors.blue,
                borderColor: window.chartColors.blue,
                data: dataNewDeaths1,
                },
                {
                    label: 'Total de casos',
                    fill: false,
                    backgroundColor: window.chartColors.green,
                    borderColor: window.chartColors.green,
                    data: dataTotalCases1,
                },
                {
                    label: 'Total de muertes',
                    fill: false,
                    backgroundColor: window.chartColors.yellow,
                    borderColor: window.chartColors.yellow,
                    data: dataTotalDeaths1,
                },

            ]
        },
        options: {
            responsive: true,
            title: {
                display: true,
                text: 'Estadísticas por mes'
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            hover: {
                mode: 'nearest',
                intersect: true
            },
            scales: {
                xAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Month'
                    }
                }],
                yAxes: [{
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Value'
                    }
                }]
            }
        }
    };
   
</script>


}